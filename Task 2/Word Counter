import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class WordCount {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to Word Count Analyzer!");

        System.out.print("Enter '1' to input text or '2' to provide a file: ");
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        String inputText = "";

        if (choice == 1) {
            System.out.print("Enter your text: ");
            inputText = scanner.nextLine();
        } else if (choice == 2) {
            System.out.print("Enter the file path: ");
            String filePath = scanner.nextLine();
            inputText = readFile(filePath);
            if (inputText == null) {
                System.out.println("Error reading the file.");
                return;
            }
        } else {
            System.out.println("Invalid choice.");
            return;
        }

        String[] words = inputText.split("\\s+|\\p{Punct}");

        int totalWordCount = words.length;
        Map<String, Integer> wordCounter = new HashMap<>();

        for (String word : words) {
            if (!word.isEmpty()) {
                word = word.toLowerCase();
                wordCounter.put(word, wordCounter.getOrDefault(word, 0) + 1);
            }
        }

        System.out.println("Total words: " + totalWordCount);
        System.out.println("Unique words: " + wordCounter.size());

        System.out.println("Word frequency:");
        for (Map.Entry<String, Integer> entry : wordCounter.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }

    public static String readFile(String filePath) {
        StringBuilder content = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                content.append(line).append("\n");
            }
        } catch (IOException e) {
            return null;
        }
        return content.toString();
    }
}
