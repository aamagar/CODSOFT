import java.sql.*;
import java.util.Scanner;

public class ConsoleStudentManagementSystem {
    private static final String  DB_URL= "jdbc:derby://localhost:1527/student_details";
   

    private static Connection connection;

    public static void main(String[] args) {
        connectToDatabase();
        

        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("Student Management System");
            System.out.println("1. Add Student");
            System.out.println("2. Update Student");
            System.out.println("3. Delete Student");
            System.out.println("4. Search Student");
            System.out.println("5. Display All Students");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1:
                    addStudent(scanner);
                    break;
                case 2:
                    updateStudent(scanner);
                    break;
                case 3:
                    deleteStudent(scanner);
                    break;
                case 4:
                    searchStudent(scanner);
                    break;
                case 5:
                    displayAllStudents();
                    break;
                case 6:
                    System.out.println("Exiting the program.");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 6);

        scanner.close();
        closeConnection();
    }

    private static void connectToDatabase() {
        try {
            connection = DriverManager.getConnection("jdbc:derby://localhost:1527/student_details");
        } catch (SQLException e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to connect to the database.");
        }
    }

    private static void closeConnection() {
        try {
            if (connection != null) {
                connection.close();
                System.out.println("Connection closed.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    

    private static void addStudent(Scanner scanner) {
        System.out.print("Enter student name: ");
        String name = scanner.nextLine();
        System.out.print("Enter roll number: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter grade: ");
        String grade = scanner.nextLine();
        System.out.print("Enter class: ");
        String studentClass = scanner.nextLine();

        try (PreparedStatement preparedStatement = connection.prepareStatement(
                "INSERT INTO students (name, roll_number, grade, class) VALUES (?, ?, ?, ?)")) {
            
            preparedStatement.setString(1, name);
            preparedStatement.setInt(2, rollNumber);
                        preparedStatement.setString(3, grade);
            preparedStatement.setString(4, studentClass);

            int rowsAffected = preparedStatement.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Student added successfully.");
            } else {
                System.out.println("Failed to add student.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("An error occurred while adding the student.");
        }
    }

    private static void updateStudent(Scanner scanner) {
        System.out.print("Enter the roll number of the student to update: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        try (PreparedStatement preparedStatement = connection.prepareStatement(
                "SELECT * FROM students WHERE roll_number = ?")) {
            preparedStatement.setInt(1, rollNumber);
            ResultSet resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                System.out.println("Student found. Enter new details:");
                
                String newId = scanner.nextLine();
                System.out.print("Enter student name: ");
                String newName = scanner.nextLine();
                System.out.print("Enter new grade: ");
                String newGrade = scanner.nextLine();
                System.out.print("Enter new class: ");
                String newClass = scanner.nextLine();

                try (PreparedStatement updateStatement = connection.prepareStatement(
                        "UPDATE students SET name = ?, grade = ?, class = ? WHERE roll_number = ?")) {
                   
                    updateStatement.setString(1, newName);
                    updateStatement.setString(2, newGrade);
                    updateStatement.setString(3, newClass);
                    updateStatement.setInt(4, rollNumber);

                    int rowsAffected = updateStatement.executeUpdate();
                    if (rowsAffected > 0) {
                        System.out.println("Student updated successfully.");
                    } else {
                        System.out.println("Failed to update student.");
                    }
                }
            } else {
                System.out.println("Student with the given roll number not found.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("An error occurred while updating the student.");
        }
    }

    private static void deleteStudent(Scanner scanner) {
        System.out.print("Enter the roll number of the student to delete: ");
        int rollNumber = scanner.nextInt();

        try (PreparedStatement preparedStatement = connection.prepareStatement(
                "DELETE FROM students WHERE roll_number = ?")) {
            preparedStatement.setInt(1, rollNumber);

            int rowsAffected = preparedStatement.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Student deleted successfully.");
            } else {
                System.out.println("Failed to delete student. Student not found.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("An error occurred while deleting the student.");
        }
    }

    private static void searchStudent(Scanner scanner) {
        System.out.print("Enter the roll number of the student to search: ");
        int rollNumber = scanner.nextInt();

      
        try (PreparedStatement preparedStatement = connection.prepareStatement(
            "SELECT * FROM students WHERE roll_number = ?")) {
        preparedStatement.setInt(1, rollNumber);
        ResultSet resultSet = preparedStatement.executeQuery();

        if (resultSet.next()) {
            System.out.println("Student found:");
            
            System.out.println("Name: " + resultSet.getString("name"));
            System.out.println("Roll Number: " + resultSet.getInt("roll_number"));
            System.out.println("Grade: " + resultSet.getString("grade"));
            System.out.println("Class: " + resultSet.getString("class"));
        } else {
            System.out.println("Student with the given roll number not found.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        System.out.println("An error occurred while searching for the student.");
    }
}

private static void displayAllStudents() {
    try (Statement statement = connection.createStatement()) {
        String selectAllSQL = "SELECT * FROM students";
        ResultSet resultSet = statement.executeQuery(selectAllSQL);

        System.out.println("List of all students:");
        while (resultSet.next()) {
           
            System.out.println("Name: " + resultSet.getString("name"));
            System.out.println("Roll Number: " + resultSet.getInt("roll_number"));
            System.out.println("Grade: " + resultSet.getString("grade"));
            System.out.println("Class: " + resultSet.getString("class"));
            System.out.println("--------------------");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        System.out.println("An error occurred while fetching the students.");
    }
}
}


